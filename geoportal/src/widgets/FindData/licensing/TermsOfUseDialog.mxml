<?xml version="1.0" encoding="utf-8"?>
<!--
///////////////////////////////////////////////////////////////////////////
// Copyright (c) 2010-2011 Esri. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
///////////////////////////////////////////////////////////////////////////
-->

<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   width="100%" height="100%"
				   cornerRadius="10"
				   creationComplete="creationCompleteHandler(event)">
	<s:filters>
		<s:GlowFilter alpha="0.8"
					  blurX="50"
					  blurY="50"
					  color="0xFFFFFF"
					  quality="{BitmapFilterQuality.MEDIUM}"
					  strength="1"/>
	</s:filters>
	<fx:Script>
		<![CDATA[
			import com.esri.viewer.components.HTMLPopupManager;
			
			import flash.filters.BitmapFilterQuality;
			
			import flashx.textLayout.conversion.TextConverter;
			
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			
			[Bindable]
			public var content:String;
			
			[Bindable]
			public var txtareaWidth:Number = 500;
			
			[Bindable]
			public var txtareaHeight:Number = 500;
			
			public var callback:Function;
			public var license:Object;
			
			public static function showTermsOfUse(license:Object, callback:Function, width:Number = 500, height:Number = 500, modal:Boolean = true):void
			{
				var touDialog:TermsOfUseDialog = new TermsOfUseDialog();
				
				var parent:Sprite = Sprite(FlexGlobals.topLevelApplication);
				
				var termsOfUse:String = license.licenseReferenceTermsOfUse;
				
				touDialog.license = license;
				touDialog.callback = callback;
				touDialog.content = termsOfUse;
				touDialog.txtareaWidth = width;
				touDialog.txtareaHeight = height;
				
				HTMLPopupManager.addPopUp(touDialog, parent, modal);
			}
			
			private function close(event:Event):void
			{
				HTMLPopupManager.removePopUp(this);
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				setStyle("backgroundColor", getStyle("contentBackgroundColor"));
				setStyle("backgroundAlpha", FlexGlobals.topLevelApplication.getStyle("backgroundAlpha"));
			}

			protected function acceptClickHandler(event:MouseEvent):void
			{
				callback(true, license);
				HTMLPopupManager.removePopUp(this);
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}
			
			protected function cancelClickHandler(event:MouseEvent):void {
				callback(false, null);
				HTMLPopupManager.removePopUp(this);
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}

		]]>
	</fx:Script>
	<!-- doc reference http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flashx/textLayout/conversion/TextConverter.html#TEXT_FIELD_HTML_FORMAT -->
	<s:RectangularDropShadow id="dropShadow"
							 left="0" right="0" top="0" bottom="0"
							 alpha="0.32"
							 angle="90"
							 blRadius="10"
							 blurX="20"
							 blurY="20"
							 brRadius="10"
							 distance="25"/>
	<s:VGroup horizontalAlign="center" paddingBottom="10">
		<s:Label text="{resourceManager.getString('gptStrings','finddata.confirmTermsTitle')}"/>
		<s:Scroller width="{txtareaWidth}" height="{txtareaHeight}"
					hasFocusableChildren="false"
					measuredSizeIncludesScrollBars="false"
					minViewportInset="1">
			<s:RichEditableText id="termsOfUseDisplay" 
								editable="false"
								paddingLeft="3"
								paddingRight="3"
								paddingTop="5"
								textFlow="{TextConverter.importToFlow(content, TextConverter.TEXT_FIELD_HTML_FORMAT)}"/>
		</s:Scroller>
		<s:Button click="acceptClickHandler(event)" label="{resourceManager.getString('gptStrings','finddata.confirmTermsButtonOk')}"/>
		<s:Button click="cancelClickHandler(event)" label="{resourceManager.getString('gptStrings','finddata.confirmTermsButtonCancel')}"/>
	</s:VGroup>
</s:BorderContainer>
